<?php
	//Сохраняю себе путь к папке с MVC, чтоб было на что опереться независимо от области видимости...
	global $MyPath;
	$MyPath = $_SERVER['DOCUMENT_ROOT'];
	
	//Путь к активам - js, css...
	const ASSETS_PATH = "/assets/";
	
	//Мне не нужно думать, какие http-заголовки формировать, чтобы открыть сессию, php сам сделает за меня эту работу...
	session_start();
	
	//Теперь пора подключать нужные классы функций. Ну чтобы вручную не тягать по файлу сделаю простенькое автоподключение...
	//Начинаю.
	foreach(['core', 'controllers'] as $null => $class){
		$scandir = scandir($MyPath . "/" . $class);
		
		foreach($scandir as $n => $fname){
			if ($fname != "." && $fname != ".."){
				include_once($MyPath . "/" . $class . "/" . $fname);
			}
		}
	}
	//Закончил.
	
	

	//Класс MVC отвечает за реализацию одноимённого подхода, создаю один экземпляр...
	$mvc = new MVC();
	
	//Теперь я хочу показать, что я ещё могу. Итак на главной странице мне нужно выводить список задач с возможностью сортировки по имени пользователя, email и статусу.
	//Обработку URL-а будет выполнять отдельный метод из класса MVC, т.е. делать маршрутизацию. Создам этом метод в классе и вернусь сюда. Но сначала создам 
	//глобальную переменную для хранения url-а.
	$mvc->processUrl();
	
	//А этой конструкцией я беру HTML, который мне удалось создать до данного вызова и отдаю веб-серверу.
	echo $mvc->callHtmlFlow();
	
?>